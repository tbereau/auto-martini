# Core package and development configuration.

# Build system dependencies ----------

[build-system]
requires = [
    "poetry-core>=1.0.8", 
    "setuptools", 
    "wheel", 
    "Cython>=0.29.21",
    "numpy", 
    "poetry-dynamic-versioning",
]
build-backend = "poetry.core.masonry.api"

# Project package metadata ----------

[tool.poetry]
name = "auto_martini"
version = "0.2.1"
packages = [
  { include = "auto_martini" }
]
exclude = [
  "*/tests/"
]
include = [
  {path = "auto_martini/optimization.pyx", format = "wheel"},
  {path = "auto_martini/*.so", format = "wheel"},
]
description = "A tool for automatic MARTINI mapping and parametrization of small organic molecules"
authors = ["Tristan Bereau", "Andrew Abi-Mansour"]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
]
readme = "README.md"
homepage = "https://github.com/tbereau/auto_martini"
repository = "https://github.com/tbereau/auto_martini"
documentation = "https://github.com/tbereau/auto_martini"
build = "build_ext.py"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
metadata = true
dirty = true


# Dependencies ----------

# The conda channels and platforms from which to resolve dependencies
[tool.conda-lock]
channels = [
  'conda-forge',
]
platforms = [
    'linux-64'
]

# Runtime dependencies that are only conda installable
[tool.conda-lock.dependencies]
rdkit = ">=v2022.03.4"

# Runtime dependencies that are both pip and conda installable
[tool.poetry.dependencies]
python = ">=3.8.0,<4"
importlib_metadata = {version = ">=1.6.0,<2.0.0", python = "~3.7"}
beautifulsoup4 = ">=4.11.1"
lxml = ">=4.9.1"
requests = ">=2.28.1"
numpy = ">=1.23.1"
cython = ">=0.29.21"
six = ">=1.16.0"

# Development dependencies that are at least pip installable.
# If dependencies are only pip installable, set
# them as {version = "<version number>", source = "pypi"}
rdkit = "^2023.3.3"
[tool.poetry.dev-dependencies]
black = "22.3.0"
flake8 = "3.9.2"
flake8-bugbear = "22.1.11"
flake8-comprehensions = "3.8.0"
flake8-logging-format = "0.6.0"
flake8-mutable = "1.2.0"
isort = "5.10.1"
pip = "*"
poetry = "1.1.13"
pytest = "^6.2.5"
pytest-cov = "3.0.0"
poetry-dynamic-versioning = "0.17.1"
# Dev tool configuration ---

# Black formatting parameters
[tool.black]
line-length = 99

# Coverage settings
[tool.coverage.run]
branch = true
source = ["auto_martini"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",  
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "pytest.mark.skip"
]
omit = [
    "auto_martini/tests/*"
]
show_missing = true
fail_under = 0 # coverage not working

# Isort settings
[tool.isort]
profile = "black"

# Pytest options
[tool.pytest.ini_options]
xfail_strict = true
testpaths = "auto_martini/tests"
